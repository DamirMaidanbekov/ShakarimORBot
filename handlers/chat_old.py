import json
from aiogram import Router, F, Bot
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.exceptions import TelegramBadRequest
from aiogram.filters import Command
from aiogram.fsm.storage.memory import MemoryStorage, StorageKey

from config import ADMIN_GROUP_ID, CHAT_NOTIFICATION_TOPIC_ID, ADMIN_TOPICS, ADMIN_IDS
from states.chat import ChatStates
from utils.file_operations import is_user_registered, load_user_data, is_user_banned
from utils.keyboards import get_main_keyboard
from utils.logger import log_info, log_error, log_chat_connection, log_callback, log_message, log_debug
from handlers.questions import active_questions

# –°–æ–∑–¥–∞–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞
router = Router()

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {user_id: admin_name}
active_chats = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–∂–∏–¥–∞—é—â–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {user_id: True}
waiting_users = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {admin_id: user_id}
admin_connections = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è ID —Å–æ–æ–±—â–µ–Ω–∏–π —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏: {user_id: (message_id, admin_name)}
notification_messages = {}

# –ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
@router.message(Command("list"))
async def handle_list_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã –∏ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã."""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id not in ADMIN_IDS:
        log_info(f"Non-admin user [ID: {user_id}] tried to use /list command")
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–ø–∏—Å–∫–æ–≤
    active_chats_list = []
    waiting_users_list = []
    unanswered_questions = []
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
    for user_id, admin_name in active_chats.items():
        user_data = load_user_data(user_id)
        active_chats_list.append(
            f"ID: {user_id}\n"
            f"–ò–º—è: {user_data.get('full_name', '')}\n"
            f"–ê–¥–º–∏–Ω: {admin_name}\n"
        )
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    for user_id in waiting_users:
        user_data = load_user_data(user_id)
        waiting_users_list.append(
            f"ID: {user_id}\n"
            f"–ò–º—è: {user_data.get('full_name', '')}\n"
        )
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    for question_id, question_data in active_questions.items():
        if question_data["status"] == "pending":
            unanswered_questions.append(
                f"ID: {question_id}\n"
                f"–û—Ç: {question_data['full_name']}\n"
                f"–ö—É—Ä—Å: {question_data['course']}\n"
                f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {question_data['faculty']}\n"
                f"–ì—Ä—É–ø–ø–∞: {question_data['group']}\n"
            )
    
    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
    response = "–ê–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã:\n"
    if active_chats_list:
        response += "\n".join(active_chats_list)
    else:
        response += "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤\n"
    
    response += "\n–û–∂–∏–¥–∞—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n"
    if waiting_users_list:
        response += "\n".join(waiting_users_list)
    else:
        response += "–ù–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
    
    response += "\n–ù–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n"
    if unanswered_questions:
        response += "\n".join(unanswered_questions)
    else:
        response += "–ù–µ—Ç –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤"
    
    await message.answer(response)
    log_info(f"Admin [ID: {user_id}] requested list of active chats and questions")

@router.message(Command("result"))
async def handle_result_command(message: Message):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö —á–∞—Ç–æ–≤ –∏ –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤."""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id not in ADMIN_IDS:
        log_info(f"Non-admin user [ID: {user_id}] tried to use /result command")
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –ü–æ–¥—Å—á–µ—Ç –æ—Ç–≤–µ—á–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
    answered_questions = sum(1 for q in active_questions.values() if q["status"] == "answered")
    total_questions = len(active_questions)
    
    response = (
        f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:\n"
        f"–í—Å–µ–≥–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {total_questions}\n"
        f"–û—Ç–≤–µ—á–µ–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {answered_questions}\n"
        f"–ê–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤: {len(active_chats)}\n"
        f"–û–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(waiting_users)}"
    )
    
    await message.answer(response)
    log_info(f"Admin [ID: {user_id}] requested statistics")

@router.message(Command("delete"))
async def handle_delete_command(message: Message, state: FSMContext, bot: Bot):
    """–£–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ —á–∞—Ç –ø–æ ID."""
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    if user_id not in ADMIN_IDS:
        log_info(f"Non-admin user [ID: {user_id}] tried to use /delete command")
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    
    # –†–∞–∑–±–æ—Ä –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥—ã
    args = message.text.split()
    if len(args) != 3:
        await message.answer(
            "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n"
            "/delete question <id> - —É–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å\n"
            "/delete chat <id> - —É–¥–∞–ª–∏—Ç—å —á–∞—Ç"
        )
        return
    
    command_type = args[1]
    target_id = args[2]
    
    if command_type == "question":
        # –£–¥–∞–ª–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞
        if target_id in active_questions:
            del active_questions[target_id]
            await message.answer(f"–í–æ–ø—Ä–æ—Å #{target_id} —É–¥–∞–ª–µ–Ω")
            log_info(f"Admin [ID: {user_id}] deleted question #{target_id}")
        else:
            await message.answer(f"–í–æ–ø—Ä–æ—Å #{target_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    elif command_type == "chat":
        # –£–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞
        target_id = int(target_id)
        if target_id in active_chats:
            admin_name = active_chats[target_id]
            # –ü–æ–∏—Å–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∏–∑ ADMIN_TOPICS
            admin_id = None
            admin_topic_id = None
            for name, info in ADMIN_TOPICS.items():
                if name == admin_name:
                    admin_id = info["user_id"]
                    admin_topic_id = info["id"]
                    break
            
            if admin_id and admin_id in admin_connections:
                del admin_connections[admin_id]
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Ç–æ–ø–∏–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            if admin_topic_id:
                await bot.send_message(
                    ADMIN_GROUP_ID,
                    "–°–≤—è–∑—å –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ!",
                    message_thread_id=admin_topic_id
                )
                # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–ø–∏–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                try:
                    await bot.edit_forum_topic(
                        chat_id=ADMIN_GROUP_ID,
                        message_thread_id=admin_topic_id,
                        name=f"üü¢|{admin_name}"
                    )
                    log_info(f"Changed topic title to üü¢|{admin_name}")
                except Exception as e:
                    log_error(f"Error changing topic title: {e}", exc_info=True)
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await bot.send_message(
                target_id,
                "–°–≤—è–∑—å –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ!\n\n–ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
                reply_markup=get_main_keyboard(target_id)
            )
            
            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_state = StorageKey(chat_id=target_id, user_id=target_id, bot_id=message.bot.id)
            await state.storage.set_state(user_state, None)
            
            del active_chats[target_id]
            await message.answer(f"–ß–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {target_id} —É–¥–∞–ª–µ–Ω")
            log_info(f"Admin [ID: {user_id}] deleted chat with user [ID: {target_id}]")
        elif target_id in waiting_users:
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await bot.send_message(
                target_id,
                "–°–≤—è–∑—å –±—ã–ª –ø—Ä–µ—Ä–≤–∞–Ω –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ!\n\n–ù–∞–ø–∏—à–∏—Ç–µ /start —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
                reply_markup=get_main_keyboard(target_id)
            )
            
            # –û—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user_state = StorageKey(chat_id=target_id, user_id=target_id, bot_id=message.bot.id)
            await state.storage.set_state(user_state, None)
            
            del waiting_users[target_id]
            await message.answer(f"–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id} —É–¥–∞–ª–µ–Ω–æ")
            log_info(f"Admin [ID: {user_id}] deleted waiting user [ID: {target_id}]")
        else:
            await message.answer(f"–ß–∞—Ç –∏–ª–∏ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {target_id} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    
    else:
        await message.answer(
            "–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø —É–¥–∞–ª–µ–Ω–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/delete question <id> - —É–¥–∞–ª–∏—Ç—å –≤–æ–ø—Ä–æ—Å\n"
            "/delete chat <id> - —É–¥–∞–ª–∏—Ç—å —á–∞—Ç"
        )

@router.callback_query(F.data == "chat")
async def start_chat(callback: CallbackQuery, state: FSMContext):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —á–∞—Ç–∞."""
    user_id = callback.from_user.id
    
    # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞
    log_callback(user_id, "chat", username=callback.from_user.username, full_name=callback.from_user.full_name)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–∞–Ω
    if is_user_banned(user_id):
        log_info(f"Banned user [ID: {user_id}] tried to start chat")
        try:
            await callback.answer("–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞.", show_alert=True)
        except TelegramBadRequest:
            pass
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    if not is_user_registered(user_id):
        log_info(f"Unregistered user [ID: {user_id}] tried to start chat")
        await callback.message.edit_text(
            "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å—Å—è —Å –û—Ñ–∏—Å –†–µ–≥–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.",
            reply_markup=get_main_keyboard()
        )
        try:
            await callback.answer()
        except TelegramBadRequest:
            pass
        return
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
    if user_id in active_chats or user_id in waiting_users:
        log_info(f"User [ID: {user_id}] tried to start chat but already in chat or waiting")
        try:
            await callback.answer("–í—ã —É–∂–µ –ø—ã—Ç–∞–µ—Ç–µ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è –∏–ª–∏ –Ω–∞ —Å–≤—è–∑–∏. –ù–∞–ø–∏—à–∏—Ç–µ /stop, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–∞—Ç–∞.", show_alert=True)
        except TelegramBadRequest:
            pass
        return
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–∂–∏–¥–∞—é—â–∏—Ö
    waiting_users[user_id] = True
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    await state.set_state(ChatStates.waiting_for_connection)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ–∂–∏–¥–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    log_chat_connection("start", user_id)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await callback.message.edit_text(
        "–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! –ü—ã—Ç–∞–µ–º—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è. –ù–∞–ø–∏—à–∏—Ç–µ /stop, —á—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å."
    )
    try:
        await callback.answer()
    except TelegramBadRequest:
        pass
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    user_data = load_user_data(user_id)
    
    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    builder = InlineKeyboardBuilder()
    builder.button(text="–°–≤—è–∑–∞—Ç—å—Å—è", callback_data=f"connect_{user_id}")
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    notification_text = (
        "–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è\n"
        f"–û—Ç: {user_data.get('full_name', '')}\n"
        f"–ö—É—Ä—Å: {user_data.get('course', '')}\n"
        f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {user_data.get('faculty', '')}\n"
        f"–ì—Ä—É–ø–ø–∞: {user_data.get('group', '')}\n\n"
        "üü¢|–û—Ç–∫—Ä—ã—Ç–æ"
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è
    notification_msg = await callback.bot.send_message(
        ADMIN_GROUP_ID,
        notification_text,
        reply_markup=builder.as_markup(),
        message_thread_id=CHAT_NOTIFICATION_TOPIC_ID
    )
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    notification_messages[user_id] = (notification_msg.message_id, None)
    log_info(f"Notification sent to admin group for user [ID: {user_id}], message ID: {notification_msg.message_id}")


@router.callback_query(F.data.startswith("connect_"))
async def connect_to_chat(callback: CallbackQuery, state: FSMContext, bot: Bot):
    """–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫ —á–∞—Ç—É."""
    admin_id = callback.from_user.id
    admin_name = None
    
    # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    callback_data = callback.data
    log_callback(admin_id, callback_data, username=callback.from_user.username, full_name=callback.from_user.full_name)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω–∞
    for name, info in ADMIN_TOPICS.items():
        if info["user_id"] == admin_id:
            admin_name = name
            break
    
    if not admin_name:
        log_info(f"Non-admin user [ID: {admin_id}] tried to connect to chat")
        try:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –æ—Ç–≤–µ—Ç–∞.", show_alert=True)
        except TelegramBadRequest:
            pass
        return
    
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö –∫–æ–ª–±—ç–∫–∞
    user_id = int(callback.data.split("_")[1])
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    if user_id not in waiting_users:
        log_info(f"Admin [ID: {admin_id}] ({admin_name}) tried to connect to user [ID: {user_id}] who is not waiting")
        try:
            await callback.answer("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª—å—à–µ –Ω–µ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è.", show_alert=True)
        except TelegramBadRequest:
            pass
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É–¥–∞–ª–∏—Ç—å –∫–Ω–æ–ø–∫—É
        notification_text = callback.message.text.replace("üü¢|–û—Ç–∫—Ä—ã—Ç–æ", "üî¥|–ó–∞–∫—Ä—ã—Ç–æ")
        await callback.message.edit_text(notification_text)
        log_info(f"Notification updated to 'closed' for user [ID: {user_id}]")
        return
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –æ–∂–∏–¥–∞—é—â–∏—Ö
    del waiting_users[user_id]
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∞–∫—Ç–∏–≤–Ω—ã–µ —á–∞—Ç—ã
    active_chats[user_id] = admin_name
    admin_connections[admin_id] = user_id
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–æ–ø–∏–∫–∞ –∞–¥–º–∏–Ω–∞
    ADMIN_TOPICS[admin_name]["status"] = "busy"
    
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    log_chat_connection("connect", user_id, admin_id, admin_name)
    log_debug(f"Admin connections dict: {admin_connections}")
    log_debug(f"Active chats dict: {active_chats}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    notification_text = callback.message.text.replace("üü¢|–û—Ç–∫—Ä—ã—Ç–æ", f"üü°|{admin_name}")
    await callback.message.edit_text(notification_text)
    log_info(f"Notification updated to 'connected' ({admin_name}) for user [ID: {user_id}]")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π ID –∏ –∞–¥–º–∏–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    if user_id in notification_messages:
        msg_id, _ = notification_messages[user_id]
        notification_messages[user_id] = (msg_id, admin_name)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    user_message = f"–ê–¥–º–∏–Ω: {admin_name}\n\n–° –≤–∞–º–∏ —Å–≤—è–∑–∞–ª–∏—Å—å! –ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç, —á—Ç–æ–±—ã –æ–±—â–∞—Ç—å—Å—è. –ù–∞–ø–∏—à–∏—Ç–µ /stop, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å."
    await bot.send_message(user_id, user_message)
    log_info(f"Connection message sent to user [ID: {user_id}]")
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –±–æ—Ç–∞
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–ª—É–∂–µ–±–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
        await bot.send_message(
            user_id,
            "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ...",
            reply_markup=None
        )
        # –•–∞–∫: –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∫–∞–Ω–∞–ª —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        log_info(f"Setting user [ID: {user_id}] to ChatStates.connected via connect_to_chat")
    except Exception as e:
        log_error(f"Error setting user state: {e}", exc_info=True)
    
    # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ –∞–¥–º–∏–Ω–∞
    try:
        admin_topic_id = ADMIN_TOPICS[admin_name]["id"]
        await bot.edit_forum_topic(
            chat_id=ADMIN_GROUP_ID,
            message_thread_id=admin_topic_id,
            name=f"üü°|{admin_name}"
        )
        log_info(f"Changed topic title to üü°|{admin_name}")
    except Exception as e:
        log_error(f"Error changing topic title: {e}", exc_info=True)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –≤ –µ–≥–æ —Ç–æ–ø–∏–∫
    admin_topic_id = ADMIN_TOPICS[admin_name]["id"]
    user_data = load_user_data(user_id)
    admin_message = (
        f"–û—Ç: {user_data.get('full_name', '')}\n"
        f"–ö—É—Ä—Å: {user_data.get('course', '')}\n"
        f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {user_data.get('faculty', '')}\n"
        f"–ì—Ä—É–ø–ø–∞: {user_data.get('group', '')}\n\n"
        "–í—ã —Å–≤—è–∑–∞–ª–∏—Å—å! –ú–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç, —á—Ç–æ–±—ã –æ–±—â–∞—Ç—å—Å—è. –ù–∞–ø–∏—à–∏—Ç–µ /stop, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å."
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫ –∞–¥–º–∏–Ω–∞ –±–µ–∑ —Å—Ç–∞—Ç—É—Å–∞ –≤ —Ç–µ–∫—Å—Ç–µ
    await bot.send_message(
        ADMIN_GROUP_ID,
        admin_message,
        message_thread_id=admin_topic_id
    )
    log_info(f"Connection message sent to admin [ID: {admin_id}] in topic {admin_topic_id}")


@router.message(Command("stop"))
async def handle_stop_command(message: Message, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–∞—Ç–∞."""
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
    log_info(f"Stop command received from user [ID: {user_id}]")
    log_debug(f"Current admin connections: {admin_connections}")
    log_debug(f"Current active chats: {active_chats}")
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –∏–∑ –≥—Ä—É–ø–ø—ã)
    if chat_id == user_id:
        current_state = await state.get_state()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        if user_id in waiting_users:
            del waiting_users[user_id]
            log_chat_connection("timeout", user_id)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–º—É ID
            if user_id in notification_messages:
                msg_id, _ = notification_messages[user_id]
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ –ø—Ä—è–º–æ–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
                    user_data = load_user_data(user_id)
                    notification_text = (
                        "–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è\n"
                        f"–û—Ç: {user_data.get('full_name', '')}\n"
                        f"–ö—É—Ä—Å: {user_data.get('course', '')}\n"
                        f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {user_data.get('faculty', '')}\n"
                        f"–ì—Ä—É–ø–ø–∞: {user_data.get('group', '')}\n\n"
                        "üî¥|–ó–∞–∫—Ä—ã—Ç–æ"
                    )
                    
                    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
                    try:
                        # –ü–æ–¥—Ö–æ–¥ 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º update_message
                        await bot.edit_message_text(
                            text=notification_text,
                            chat_id=ADMIN_GROUP_ID,
                            message_id=msg_id
                        )
                        log_info(f"Successfully updated notification (Method 1) for user [ID: {user_id}]")
                    except Exception as e1:
                        log_error(f"Method 1 failed: {e1}")
                        try:
                            # –ü–æ–¥—Ö–æ–¥ 2: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º disable_web_page_preview
                            await bot.edit_message_text(
                                text=notification_text,
                                chat_id=ADMIN_GROUP_ID,
                                message_id=msg_id,
                                disable_web_page_preview=True
                            )
                            log_info(f"Successfully updated notification (Method 2) for user [ID: {user_id}]")
                        except Exception as e2:
                            log_error(f"Method 2 failed: {e2}")
                            # –í —Å–ª—É—á–∞–µ –∫—Ä–∞–π–Ω–µ–π –Ω–µ—É–¥–∞—á–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                            await bot.send_message(
                                ADMIN_GROUP_ID,
                                f"–£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û–ë–ù–û–í–õ–ï–ù–û: {notification_text}",
                                message_thread_id=CHAT_NOTIFICATION_TOPIC_ID
                            )
                            log_info(f"Sent new notification message for user [ID: {user_id}]")
                    
                    # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                    del notification_messages[user_id]
                except Exception as e:
                    log_error(f"Error updating notification directly: {e}", exc_info=True)
                    # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    try:
                        await bot.send_message(
                            ADMIN_GROUP_ID,
                            "–í–ê–ñ–ù–û: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–µ—Ä–≤–∞–ª —Å–≤—è–∑—å.",
                            message_thread_id=CHAT_NOTIFICATION_TOPIC_ID
                        )
                    except Exception as e:
                        log_error(f"Error sending new notification: {e}", exc_info=True)
            
            await message.answer("–°–≤—è–∑—å –ø—Ä–µ—Ä–≤–∞–Ω–∞ –≤–∞–º–∏! –ù–∞–ø–∏—à–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", reply_markup=get_main_keyboard(user_id))
            await state.clear()
            log_info(f"User [ID: {user_id}] disconnected while waiting")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ
        if user_id in active_chats:
            admin_name = active_chats[user_id]
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ç–æ–ø–∏–∫–∞ –∞–¥–º–∏–Ω–∞
            if admin_name in ADMIN_TOPICS:
                ADMIN_TOPICS[admin_name]["status"] = "open"
                admin_topic_id = ADMIN_TOPICS[admin_name]["id"]
                admin_id = ADMIN_TOPICS[admin_name]["user_id"]
                
                # –õ–æ–≥–∏—Ä—É–µ–º —Ä–∞–∑—Ä—ã–≤ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
                log_chat_connection("disconnect_user", user_id, admin_id, admin_name)
                
                # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑—å –∞–¥–º–∏–Ω–∞
                if admin_id in admin_connections:
                    del admin_connections[admin_id]
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
                await bot.send_message(
                    ADMIN_GROUP_ID,
                    "–°–≤—è–∑—å –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!",
                    message_thread_id=admin_topic_id
                )
                log_info(f"Disconnection message sent to admin [ID: {admin_id}]")
                
                # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ –∞–¥–º–∏–Ω–∞
                try:
                    await bot.edit_forum_topic(
                        chat_id=ADMIN_GROUP_ID,
                        message_thread_id=admin_topic_id,
                        name=f"üü¢|{admin_name}"
                    )
                    log_info(f"Changed topic title to üü¢|{admin_name}")
                except Exception as e:
                    log_error(f"Error changing topic title: {e}", exc_info=True)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é
                if user_id in notification_messages:
                    msg_id, saved_admin_name = notification_messages[user_id]
                    if saved_admin_name == admin_name:
                        try:
                            user_data = load_user_data(user_id)
                            notification_text = (
                                "–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è\n"
                                f"–û—Ç: {user_data.get('full_name', '')}\n"
                                f"–ö—É—Ä—Å: {user_data.get('course', '')}\n"
                                f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {user_data.get('faculty', '')}\n"
                                f"–ì—Ä—É–ø–ø–∞: {user_data.get('group', '')}\n\n"
                                "üî¥|–ó–∞–∫—Ä—ã—Ç–æ"
                            )
                            
                            # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
                            try:
                                # –ü–æ–¥—Ö–æ–¥ 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º update_message
                                await bot.edit_message_text(
                                    text=notification_text,
                                    chat_id=ADMIN_GROUP_ID,
                                    message_id=msg_id
                                )
                                log_info(f"Successfully updated notification (Method 1) for user [ID: {user_id}]")
                            except Exception as e1:
                                log_error(f"Method 1 failed: {e1}")
                                try:
                                    # –ü–æ–¥—Ö–æ–¥ 2: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º disable_web_page_preview
                                    await bot.edit_message_text(
                                        text=notification_text,
                                        chat_id=ADMIN_GROUP_ID,
                                        message_id=msg_id,
                                        disable_web_page_preview=True
                                    )
                                    log_info(f"Successfully updated notification (Method 2) for user [ID: {user_id}]")
                                except Exception as e2:
                                    log_error(f"Method 2 failed: {e2}")
                                    # –í —Å–ª—É—á–∞–µ –∫—Ä–∞–π–Ω–µ–π –Ω–µ—É–¥–∞—á–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                                    await bot.send_message(
                                        ADMIN_GROUP_ID,
                                        f"–£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û–ë–ù–û–í–õ–ï–ù–û: {notification_text}",
                                        message_thread_id=CHAT_NOTIFICATION_TOPIC_ID
                                    )
                                    log_info(f"Sent new notification message for user [ID: {user_id}]")
                            
                            # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                            del notification_messages[user_id]
                        except Exception as e:
                            log_error(f"Error updating notification directly: {e}", exc_info=True)
                            # –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
            
            # –£–¥–∞–ª—è–µ–º –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
            del active_chats[user_id]
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.answer("–°–≤—è–∑—å –ø—Ä–µ—Ä–≤–∞–Ω–∞ –≤–∞–º–∏! –ù–∞–ø–∏—à–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.", reply_markup=get_main_keyboard(user_id))
            
            # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            await state.clear()
            log_info(f"User [ID: {user_id}] disconnected from active chat")
            return
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –∏ –Ω–µ –≤ —á–∞—Ç–µ
        log_info(f"User [ID: {user_id}] tried to stop chat but was not in chat")
        await message.answer("–û–®–ò–ë–ö–ê!!! –í—ã –Ω–µ –ø—ã—Ç–∞–µ—Ç–µ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è –∏–ª–∏ –í—ã –Ω–µ –Ω–∞ —Å–≤—è–∑–∏!")
        return

    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã (–æ—Ç –∞–¥–º–∏–Ω–∞)
    elif message.chat.id == int(ADMIN_GROUP_ID) and message.message_thread_id:
        # –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞ –ø–æ —Ç–æ–ø–∏–∫—É
        admin_name = None
        for name, info in ADMIN_TOPICS.items():
            if info["id"] == message.message_thread_id:
                admin_name = name
                break
        
        if not admin_name:
            log_error(f"Stop command received from unknown topic ID: {message.message_thread_id}")
            await message.answer("–û–®–ò–ë–ö–ê!!! –≠—Ç–æ—Ç —Ç–æ–ø–∏–∫ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è —á–∞—Ç–∞.")
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∞–¥–º–∏–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if user_id not in admin_connections:
            log_info(f"Admin [ID: {user_id}] ({admin_name}) tried to stop chat but was not connected")
            # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
            return
        
        connected_user_id = admin_connections[user_id]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ
        if connected_user_id not in active_chats or active_chats[connected_user_id] != admin_name:
            log_error(f"Admin [ID: {user_id}] ({admin_name}) in inconsistent state with user [ID: {connected_user_id}]")
            await message.answer("–û—à–∏–±–∫–∞: —Å–≤—è–∑—å –±—ã–ª–∞ —Ä–∞–∑–æ—Ä–≤–∞–Ω–∞. –ù–∞–ø–∏—à–∏—Ç–µ /stop –¥–ª—è —Å–±—Ä–æ—Å–∞.")
            return
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Ä–∞–∑—Ä—ã–≤ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
        log_chat_connection("disconnect_admin", connected_user_id, user_id, admin_name)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await bot.send_message(
            connected_user_id,
            "–°–≤—è–∑—å –ø—Ä–µ—Ä–≤–∞–Ω–∞ –æ—Ç–≤–µ—Ç—á–∏–∫–æ–º! –ù–∞–ø–∏—à–∏—Ç–µ /start, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å.",
            reply_markup=get_main_keyboard(connected_user_id)
        )
        log_info(f"Disconnection message sent to user [ID: {connected_user_id}]")
        
        # –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö —á–∞—Ç–æ–≤
        del active_chats[connected_user_id]
        
        # –£–¥–∞–ª—è–µ–º —Å–≤—è–∑—å –∞–¥–º–∏–Ω–∞
        del admin_connections[user_id]
        
        # –ò–∑–º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ –∞–¥–º–∏–Ω–∞
        try:
            await bot.edit_forum_topic(
                chat_id=ADMIN_GROUP_ID,
                message_thread_id=message.message_thread_id,
                name=f"üü¢|{admin_name}"
            )
            log_info(f"Changed topic title to üü¢|{admin_name}")
        except Exception as e:
            log_error(f"Error changing topic title: {e}", exc_info=True)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é
        if connected_user_id in notification_messages:
            msg_id, saved_admin_name = notification_messages[connected_user_id]
            if saved_admin_name == admin_name:
                try:
                    user_data = load_user_data(connected_user_id)
                    notification_text = (
                        "–ö—Ç–æ-—Ç–æ –ø—ã—Ç–∞–µ—Ç—Å—è —Å–≤—è–∑–∞—Ç—å—Å—è\n"
                        f"–û—Ç: {user_data.get('full_name', '')}\n"
                        f"–ö—É—Ä—Å: {user_data.get('course', '')}\n"
                        f"–§–∞–∫—É–ª—å—Ç–µ—Ç: {user_data.get('faculty', '')}\n"
                        f"–ì—Ä—É–ø–ø–∞: {user_data.get('group', '')}\n\n"
                        "üî¥|–ó–∞–∫—Ä—ã—Ç–æ"
                    )
                    
                    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é
                    try:
                        # –ü–æ–¥—Ö–æ–¥ 1: –ò—Å–ø–æ–ª—å–∑—É–µ–º update_message
                        await bot.edit_message_text(
                            text=notification_text,
                            chat_id=ADMIN_GROUP_ID,
                            message_id=msg_id
                        )
                        log_info(f"Successfully updated notification (Method 1) for user [ID: {connected_user_id}]")
                    except Exception as e1:
                        log_error(f"Method 1 failed: {e1}")
                        try:
                            # –ü–æ–¥—Ö–æ–¥ 2: –° –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º disable_web_page_preview
                            await bot.edit_message_text(
                                text=notification_text,
                                chat_id=ADMIN_GROUP_ID,
                                message_id=msg_id,
                                disable_web_page_preview=True
                            )
                            log_info(f"Successfully updated notification (Method 2) for user [ID: {connected_user_id}]")
                        except Exception as e2:
                            log_error(f"Method 2 failed: {e2}")
                            # –í —Å–ª—É—á–∞–µ –∫—Ä–∞–π–Ω–µ–π –Ω–µ—É–¥–∞—á–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                            await bot.send_message(
                                ADMIN_GROUP_ID,
                                f"–£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û–ë–ù–û–í–õ–ï–ù–û: {notification_text}",
                                message_thread_id=CHAT_NOTIFICATION_TOPIC_ID
                            )
                            log_info(f"Sent new notification message for user [ID: {connected_user_id}]")
                    
                    # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                    del notification_messages[connected_user_id]
                except Exception as e:
                    log_error(f"Error updating notification directly: {e}", exc_info=True)
                    # –ü—Ä–æ—Å—Ç–æ –ª–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–¥–º–∏–Ω–∞
        ADMIN_TOPICS[admin_name]["status"] = "open"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
        await message.answer("–°–≤—è–∑—å –ø—Ä–µ—Ä–≤–∞–Ω–∞ –≤–∞–º–∏!")
        log_info(f"Admin [ID: {user_id}] ({admin_name}) disconnected from chat")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ disconnected_by_admin –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_state = StorageKey(chat_id=connected_user_id, user_id=connected_user_id, bot_id=message.bot.id)
        await state.storage.set_state(user_state, ChatStates.disconnected_by_admin)


# –ò–∑–º–µ–Ω–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.message()
async def handle_all_user_messages(message: Message, state: FSMContext, bot: Bot):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    user_id = message.from_user.id
    chat_id = message.chat.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_state = await state.get_state()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ disconnected_by_admin
    if current_state == ChatStates.disconnected_by_admin.state:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥–æ–π /start
        if message.text == "/start":
            # –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—É /start
            await state.clear()
            return
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–∏–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞
        if message.text == "üí¨ –ß–∞—Ç":
            # –†–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞
            await state.clear()
            return
        
        # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –±–ª–æ–∫–∏—Ä—É–µ–º
        await message.answer("–°–≤—è–∑—å –±—ã–ª–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –æ—Ç–≤–µ—Ç—á–∏–∫–æ–º. –í—ã –º–æ–∂–µ—Ç–µ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π —á–∞—Ç.")
        return
    
    # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–æ–º–∞–Ω–¥—É /stop, –æ–Ω–∞ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ
    if message.text == "/stop":
        return
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–µ –∏–∑ –≥—Ä—É–ø–ø—ã)
    if chat_id == user_id:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        current_state = await state.get_state()
        log_debug(f"Message from user [ID: {user_id}], state: {current_state}")
        log_debug(f"User in active_chats: {user_id in active_chats}")
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ
        if user_id in active_chats:
            admin_name = active_chats[user_id]
            
            # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            log_message("User", user_id, message.content_type, username=message.from_user.username, full_name=message.from_user.full_name)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–¥–º–∏–Ω–∞ –≤ —Å–ª–æ–≤–∞—Ä–µ
            if admin_name not in ADMIN_TOPICS:
                log_error(f"Admin {admin_name} not found in ADMIN_TOPICS for user [ID: {user_id}]")
                await message.answer("–û—à–∏–±–∫–∞: –∞–¥–º–∏–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω. –ß–∞—Ç –±—É–¥–µ—Ç –∑–∞–∫—Ä—ã—Ç.")
                await state.clear()
                del active_chats[user_id]
                return
            
            admin_topic_id = ADMIN_TOPICS[admin_name]["id"]
            
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            try:
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç–≤–µ—Ç–µ
                if message.content_type == "text":
                    # –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await bot.send_message(
                        ADMIN_GROUP_ID,
                        message.text,
                        message_thread_id=admin_topic_id
                    )
                elif message.content_type == "photo":
                    # –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
                    await bot.send_photo(
                        ADMIN_GROUP_ID,
                        message.photo[-1].file_id,
                        caption=message.caption,
                        message_thread_id=admin_topic_id
                    )
                elif message.content_type == "video":
                    # –í–∏–¥–µ–æ
                    await bot.send_video(
                        ADMIN_GROUP_ID,
                        message.video.file_id,
                        caption=message.caption,
                        message_thread_id=admin_topic_id
                    )
                elif message.content_type == "audio":
                    # –ê—É–¥–∏–æ
                    await bot.send_audio(
                        ADMIN_GROUP_ID,
                        message.audio.file_id,
                        caption=message.caption,
                        message_thread_id=admin_topic_id
                    )
                elif message.content_type == "voice":
                    # –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                    await bot.send_voice(
                        ADMIN_GROUP_ID,
                        message.voice.file_id,
                        message_thread_id=admin_topic_id
                    )
                elif message.content_type == "video_note":
                    # –í–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫
                    await bot.send_video_note(
                        ADMIN_GROUP_ID,
                        message.video_note.file_id,
                        message_thread_id=admin_topic_id
                    )
                elif message.content_type == "document":
                    # –î–æ–∫—É–º–µ–Ω—Ç
                    await bot.send_document(
                        ADMIN_GROUP_ID,
                        message.document.file_id,
                        caption=message.caption,
                        message_thread_id=admin_topic_id
                    )
                elif message.content_type == "sticker":
                    # –°—Ç–∏–∫–µ—Ä
                    await bot.send_sticker(
                        ADMIN_GROUP_ID,
                        message.sticker.file_id,
                        message_thread_id=admin_topic_id
                    )
                else:
                    # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                    await bot.send_message(
                        ADMIN_GROUP_ID,
                        f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞: {message.content_type}, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.",
                        message_thread_id=admin_topic_id
                    )
                
                log_info(f"Message from user [ID: {user_id}] sent to admin {admin_name} in topic {admin_topic_id}")
            except Exception as e:
                log_error(f"Error forwarding message to admin: {e}", exc_info=True)
                await message.answer("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /stop –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —á–∞—Ç–∞.")
            return
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ–∂–∏–¥–∞–Ω–∏–∏
        elif user_id in waiting_users and current_state == ChatStates.waiting_for_connection.state:
            log_info(f"Message from waiting user [ID: {user_id}] blocked")
            # –õ—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫—Ä–æ–º–µ /stop –±–ª–æ–∫–∏—Ä—É–µ—Ç—Å—è
            await message.answer("–ù–∞–ø–∏—à–∏—Ç–µ /stop, —á—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–∞—Ç–∞.")
            return
    
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã (–æ—Ç –∞–¥–º–∏–Ω–∞)
    elif message.chat.id == int(ADMIN_GROUP_ID) and message.message_thread_id:
        # –ù–∞—Ö–æ–¥–∏–º –∞–¥–º–∏–Ω–∞ –ø–æ —Ç–æ–ø–∏–∫—É
        admin_name = None
        for name, info in ADMIN_TOPICS.items():
            if info["id"] == message.message_thread_id:
                admin_name = name
                break
        
        if not admin_name:
            return
        
        # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞
        log_message("Admin", user_id, message.content_type, username=message.from_user.username, full_name=message.from_user.full_name)
        log_debug(f"Admin [ID: {user_id}] in admin_connections: {user_id in admin_connections}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∞–¥–º–∏–Ω–∞ –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
        if user_id not in admin_connections:
            # –ï—Å–ª–∏ –∞–¥–º–∏–Ω –Ω–µ –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
            log_info(f"Message from admin [ID: {user_id}] ({admin_name}) ignored - not in active chat")
            return
        
        connected_user_id = admin_connections[user_id]
        log_debug(f"Admin [ID: {user_id}] connected to user [ID: {connected_user_id}]")
        log_debug(f"User [ID: {connected_user_id}] in active_chats: {connected_user_id in active_chats}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ –∞–∫—Ç–∏–≤–Ω–æ–º —á–∞—Ç–µ
        if connected_user_id not in active_chats or active_chats[connected_user_id] != admin_name:
            log_error(f"Admin [ID: {user_id}] ({admin_name}) in inconsistent state with user [ID: {connected_user_id}]")
            await message.answer("–û—à–∏–±–∫–∞: —Å–≤—è–∑—å –±—ã–ª–∞ —Ä–∞–∑–æ—Ä–≤–∞–Ω–∞. –ù–∞–ø–∏—à–∏—Ç–µ /stop –¥–ª—è —Å–±—Ä–æ—Å–∞.")
            return
        
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        try:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–µ–∑ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –æ—Ç–≤–µ—Ç–µ
            if message.content_type == "text":
                # –û–±—ã—á–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await bot.send_message(
                    connected_user_id,
                    message.text
                )
            elif message.content_type == "photo":
                # –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è
                await bot.send_photo(
                    connected_user_id,
                    message.photo[-1].file_id,
                    caption=message.caption
                )
            elif message.content_type == "video":
                # –í–∏–¥–µ–æ
                await bot.send_video(
                    connected_user_id,
                    message.video.file_id,
                    caption=message.caption
                )
            elif message.content_type == "audio":
                # –ê—É–¥–∏–æ
                await bot.send_audio(
                    connected_user_id,
                    message.audio.file_id,
                    caption=message.caption
                )
            elif message.content_type == "voice":
                # –ì–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                await bot.send_voice(
                    connected_user_id,
                    message.voice.file_id
                )
            elif message.content_type == "video_note":
                # –í–∏–¥–µ–æ–∫—Ä—É–∂–æ–∫
                await bot.send_video_note(
                    connected_user_id,
                    message.video_note.file_id
                )
            elif message.content_type == "document":
                # –î–æ–∫—É–º–µ–Ω—Ç
                await bot.send_document(
                    connected_user_id,
                    message.document.file_id,
                    caption=message.caption
                )
            elif message.content_type == "sticker":
                # –°—Ç–∏–∫–µ—Ä
                await bot.send_sticker(
                    connected_user_id,
                    message.sticker.file_id
                )
            else:
                # –î–ª—è –¥—Ä—É–≥–∏—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                await bot.send_message(
                    connected_user_id,
                    f"–°–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞: {message.content_type} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."
                )
            
            log_info(f"Message from admin [ID: {user_id}] ({admin_name}) sent to user [ID: {connected_user_id}]")
        except Exception as e:
            log_error(f"Error forwarding message to user: {e}", exc_info=True)
            await message.answer("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /stop –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —á–∞—Ç–∞.") 